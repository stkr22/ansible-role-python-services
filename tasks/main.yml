---
# tasks file for python-services
- name: Set facts.
  ansible.builtin.set_fact:
    python_project_wd: "{{ python_project_repository_path }}/virtual-assistant-listener-py"

- name: Ensure Python, virtualenv and Pip are installed
  become: true
  ansible.builtin.apt:
    name:
      - python3
      - python3-pip
      - python3-virtualenv
    state: present
    update_cache: true

- name: Install Poetry using Pip
  ansible.builtin.pip:
    name: poetry
    state: present
    virtualenv: "{{ python_project_repository_path }}/.install_venv"

- name: Clone private repository using HTTPS and PAT # noqa: latest
  ansible.builtin.git:
    repo: 'https://x-access-token:{{ python_project_github_token }}@github.com/stkr22/virtual-assistant-listener-py.git'
    dest: "{{ python_project_wd }}"
    update: true
    force: true
  notify: Restart virtual assistant listener

- name: Ensure the script is executable
  become: true
  ansible.builtin.file:
    path: "{{ python_project_wd }}/scripts/install_dependencies.sh"
    mode: '0700'
    owner: root
    group: root

- name: Execute install_dependencies.sh script
  become: true
  ansible.builtin.shell: install_dependencies.sh >> install_dependencies.log
  args:
    chdir: "{{ python_project_wd }}/scripts"
    creates: install_dependencies.log

- name: Install project dependencies using Poetry
  ansible.builtin.shell:
    cmd: "{{ python_project_repository_path }}/.install_venv/bin/poetry install"
    chdir: "{{ python_project_wd }}"
  environment:
    POETRY_VIRTUALENVS_IN_PROJECT: 'true'

- name: Generate config file from template
  ansible.builtin.copy:
    dest: "{{ python_project_wd }}/config.yaml"
    content: "{{ python_project_env_vars | to_nice_yaml }}"
    mode: "0644"
  notify: Restart virtual assistant listener

- name: Create virtual listener service.
  become: true
  ansible.builtin.template:
    src: virtual_assistant_listener_py.service.j2
    dest: /etc/systemd/system/virtual_assistant_listener_py.service
    owner: root
    group: root
    mode: "0644"
  notify: Restart virtual assistant listener


- name: Flush handlers for immediate systemd restart.
  ansible.builtin.meta: flush_handlers
